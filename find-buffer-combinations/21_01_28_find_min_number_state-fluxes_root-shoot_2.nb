(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     47369,       1053]
NotebookOptionsPosition[     46168,       1024]
NotebookOutlinePosition[     46689,       1043]
CellTagsIndexPosition[     46646,       1040]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"define", " ", "model"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"QS", "=", 
     RowBox[{"F", "[", 
      RowBox[{"S", ",", 
       RowBox[{"\[Rho]N", "/", "\[Beta]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QR", "=", 
     RowBox[{"F", "[", 
      RowBox[{"\[Rho]C", ",", "R"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"full", " ", "set", " ", "of", " ", "fluxes"}], ",", " ", 
     RowBox[{"in", " ", "form", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"flux", " ", "name"}], ",", " ", "formula"}], "}"}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsolve", "=", 
     RowBox[{"tsolve", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Rho]N", ",", 
          RowBox[{"R", "-", "QR"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Rho]C", ",", 
          RowBox[{"S", "-", "QS"}]}], "}"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"labels", " ", "for", " ", 
     RowBox[{"fluxes", ":", " ", 
      RowBox[{"for", " ", "plotting"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"names", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\[Rho]N", "\[Rule]", 
        "\"\<\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"N\"],FontSlant->\"Italic\"]\)\>\""}], ",", 
       RowBox[{
       "\[Rho]C", "\[Rule]", 
        "\"\<\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"C\"],FontSlant->\"Italic\"]\)\>\""}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"get", " ", "the", " ", "adjacency", " ", "matrix"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"matrix", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"FreeQ", "[", 
         RowBox[{
          RowBox[{"row", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"row", ",", "tsolve"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"tsolve", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"True", "\[Rule]", "0"}], ",", 
        RowBox[{"False", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"show", " ", "the", " ", "matrix"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", 
    RowBox[{"matrix", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"#", ",", "#"}], "}"}]}], "&"}], "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"tsolve", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "/.", "names"}], ")"}]}]}],
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.820873878258656*^9, 3.8208738886354027`*^9}, {
   3.820873928958201*^9, 3.8208739966404047`*^9}, {3.820874062990571*^9, 
   3.820874066120101*^9}, {3.820960787213538*^9, 3.820960814055015*^9}, 
   3.821016923948601*^9, {3.82102772063081*^9, 3.821027726416346*^9}, {
   3.821028984071094*^9, 3.8210289926032057`*^9}, {3.8210385548808613`*^9, 
   3.8210386016435213`*^9}, {3.8210386354518547`*^9, 3.821038649802844*^9}, {
   3.821044091799878*^9, 3.821044284193717*^9}, {3.821044314448442*^9, 
   3.8210443147841377`*^9}, {3.8210443505312033`*^9, 
   3.8210443882212877`*^9}, {3.8210444417511883`*^9, 3.821044698092042*^9}, 
   3.821044782655546*^9, {3.8210448630240183`*^9, 3.821044888676708*^9}, {
   3.82104492437959*^9, 3.821044925554384*^9}, {3.821046303119816*^9, 
   3.821046335615446*^9}, {3.821046381397156*^9, 3.821046383557754*^9}, {
   3.82104642242695*^9, 3.821046430202965*^9}, {3.821046495848516*^9, 
   3.82104651803204*^9}, {3.821046572999084*^9, 3.821046600013941*^9}, {
   3.821046675395247*^9, 3.821046698539798*^9}, {3.82104676381949*^9, 
   3.8210467833160353`*^9}, {3.821046833142048*^9, 3.8210469519736567`*^9}, {
   3.821047011414681*^9, 3.821047025406744*^9}, {3.821047207654263*^9, 
   3.821047227803149*^9}, {3.826917188772313*^9, 3.8269172177617826`*^9}, {
   3.835712655834118*^9, 3.835712904543754*^9}, {3.8357129489586*^9, 
   3.835713002583178*^9}, {3.8357134901632338`*^9, 3.835713518542583*^9}, {
   3.835714917492353*^9, 3.835714997770525*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"62b48ec8-8ea3-49e5-90b6-77a4e3c89b1a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\", \
\\\"N\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\", \
\\\"C\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
       HoldForm]},
     {
      TagBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\", \
\\\"N\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
       HoldForm], "0", "1"},
     {
      TagBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\", \
\\\"C\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
       HoldForm], "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"N\"],FontSlant->\"Italic\"]\)", 
       "\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \"C\"],FontSlant->\"Italic\"]\
\)"}, {"\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \"N\"],FontSlant->\"Italic\"]\
\)", "\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"C\"],FontSlant->\"Italic\"]\)"}}]]]], "Output",
 CellChangeTimes->{
  3.835712969698203*^9, 3.835713030886791*^9, {3.835713493940544*^9, 
   3.835713519728651*^9}, 3.835714447812868*^9, {3.835714543279725*^9, 
   3.8357145586353483`*^9}, 3.8357146044861107`*^9, 3.835714644999354*^9, 
   3.835715001750708*^9, {3.835715162833666*^9, 3.8357151900764*^9}, 
   3.8357152333563623`*^9, 3.836236465621304*^9},
 CellLabel->
  "Out[6]//TableForm=",ExpressionUUID->"5d928e1e-137a-4f8b-9ed2-09d2d691c996"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "pairs", " ", "of", " ", "position", " ", "in", " ", "adjacency", " ", 
    "matrix", " ", "and", " ", "corresponding", " ", "flux"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numbers", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "@", 
           RowBox[{"Length", "@", "#"}]}], ",", "#"}], "}"}], "]"}], "&"}], 
      "@", 
      RowBox[{"tsolve", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "replacement", " ", "rule", " ", "to", " ", "replace", " ", "positions", 
     " ", "in", " ", "adjacency", " ", "matrix", " ", "with", " ", "flux", 
     " ", "names"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fluxtonumber", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", "numbers"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "make", " ", "a", " ", "graph", " ", "from", " ", "the", " ", "fluxes", 
      " ", "in", " ", "tsolve", " ", 
      RowBox[{"(", 
       RowBox[{"using", " ", "the", " ", "adjency", " ", "matrix"}], ")"}]}], 
     ",", " ", 
     RowBox[{"for", " ", 
      RowBox[{"later", ":", " ", 
       RowBox[{"mark", " ", "all", " ", "markeds", " ", "yellow"}]}]}]}], 
    "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"graph", "[", 
      RowBox[{"matrix_", ",", "markeds_"}], "]"}], ":=", 
     RowBox[{"AdjacencyGraph", "[", 
      RowBox[{"matrix", ",", 
       RowBox[{"VertexStyle", "\[Rule]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"i", "\[Rule]", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {"Yellow", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"markeds", "/.", "fluxtonumber"}], ",", "i"}], 
                   "]"}]},
                 {
                  RowBox[{"Lighter", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], 
                    ",", ".9"}], "]"}], "True"}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                Selectable->True]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True]}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "@", "tsolve"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"VertexSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{".2", ",", ".2"}], "}"}], "}"}]}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "Center"}], "]"}]}], 
            "&"}], "/@", "numbers"}], "/.", "names"}], ")"}]}], ",", 
       RowBox[{"VertexLabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"10", ",", "Bold", ",", "Italic"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
       RowBox[{"EdgeStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", 
            RowBox[{"Scaled", "[", ".01", "]"}], "]"}], ",", "Black"}], "}"}],
          "}"}]}], ",", 
       RowBox[{
       "GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], ",", 
       RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"graph", "[", 
    RowBox[{"matrix", ",", 
     RowBox[{"{", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8357139275664787`*^9, 3.835713955900045*^9}, {
  3.835714454184874*^9, 3.8357144547220507`*^9}, {3.83571450583913*^9, 
  3.8357145142612867`*^9}, {3.8357145783076982`*^9, 3.835714579072809*^9}, {
  3.835715012497025*^9, 3.835715018461627*^9}, {3.835715053318878*^9, 
  3.835715083983878*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"af7d9720-9bab-4c43-a177-da6f35132207"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2}, {
       SparseArray[
       Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{2}, {1}}}, Pattern}], Null}, {
      EdgeStyle -> {{
          Thickness[
           Scaled[0.01]], 
          GrayLevel[0]}}, GraphLayout -> "SpringElectricalEmbedding", 
       ImageSize -> 200, 
       VertexLabels -> {
        2 -> Placed[
          "\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \"C\"],FontSlant->\"Italic\
\"]\)", Center], 1 -> 
         Placed["\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"N\"],FontSlant->\"Italic\"]\)", Center]}, VertexLabelStyle -> {
         Directive[10, Bold, Italic]}, VertexSize -> {{0.2, 0.2}}, 
       VertexStyle -> {
        1 -> RGBColor[0.9368417, 0.9506779000000001, 0.9709798000000001], 2 -> 
         RGBColor[0.9368417, 0.9506779000000001, 0.9709798000000001]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[0.01], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{1., 0.}, {
         0.5000000000000003, -0.1644407471831164}, {0., 
         5.677710618986984*^-18}}], 0.2], 
        ArrowBox[BezierCurveBox[{{0., 5.677710618986984*^-18}, {
         0.5000000000000002, 0.1644407471831165}, {1., 0.}}], 0.2]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0.9368417, 0.9506779000000001, 0.9709798000000001], 
          DiskBox[{1., 0.}, 0.2]}, InsetBox[
          
          StyleBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\", \
\\\"N\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
           StripOnInput->False,
           FontSize->10,
           FontWeight->Bold,
           FontSlant->Italic], {1., 0.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.9368417, 0.9506779000000001, 0.9709798000000001], 
          DiskBox[{0., 5.677710618986984*^-18}, 0.2]}, InsetBox[
          
          StyleBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\", \
\\\"C\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
           StripOnInput->False,
           FontSize->10,
           FontWeight->Bold,
           FontSlant->Italic], {0., 5.677710618986984*^-18},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->200]], "Output",
 CellChangeTimes->{
  3.8357139574979553`*^9, {3.835714447912447*^9, 3.835714455492437*^9}, {
   3.835714514809717*^9, 3.835714604628159*^9}, 3.835714645139145*^9, {
   3.8357150049931583`*^9, 3.835715019171279*^9}, {3.8357150630978823`*^9, 
   3.835715085220667*^9}, {3.8357151629906693`*^9, 3.835715190256818*^9}, 
   3.835715233498105*^9, 3.836236465810598*^9},
 CellLabel->"Out[10]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVm3d0VVXWwK95SQhIHwuKBUFHxTbO2BUdBVQIIaEnVAGRIlUQAVEQEUGK
okjvTUAQQRQRkN6LICJFkCa9KCqK0863f/vuc7m8Nd8fk7XS7jtnn93b2Ter
cacWzdo07tSyaeNST73QuH2Llk07lnqy3QvyKHFJEFxSPwiCNqUC/nbyp/3Q
rwb8sH/+h7//or+KuPPnz7vvv//erVq1yn3xxRduzpw5btq0aW7cuHFuxIgR
buLEie7DDz908+bNc4sWLXLr1693hw8fdv/617+CfQbj559/dt9++61btmyZ
+/zzz93s2bPd1KlT3ZgxY9yoUaPc5MmT3axZs9xnn33mlixZ4rZu3epOnz7t
/vOf/wR3hejcpr/yud9++02PYOsrr7zimjRp4qpUyXKZmZlBiqtcOTPhKlXO
DAq5SpUy+Sv6rsx3ZiYLXXZ2jmvZsqXr3bu3++CDDxS3f/7zn8F2PSTDnTx5
0i1evNi9++677sUXX3R169aVfVV0v8DJ0CPyXwSyVq1arkOHDm7AgAHu008/
dT/88IOiXzZE/2b9lc4j991337lJkya5Tp06uaysqoBIUYglXKNnmrgu3bq7
wUOGuRkzP3affr7ILVq6wq1au9Ft3PKN+3r7brd+89duxer1buGXy93cTxe4
yR/McP0HvuM6dOzscuvWc09XqhwSLFjVqFnT9ejRw3300Ufu+PHjmxWLUtDq
1q1b595//33XvHlzJQBinhaeZVXNcc2at3Q9XnvdDR851n0051M3/4sv3ZLl
q92a9ZvdV9t2uK3bd7l1G7e4pSvWuM8XLnEffzLfjRk30b3+Rl/XqnVbV616
TYUFGsBu2LChGzhwoPvyyy/d77//HjIjuEl/FVBuo0FIhNXsys6p7jp3edlN
mPyBEn7izC/F3I+/nJflR46fcctWrnVDh492rdu2FzqrRAd169ZNlfDcuXNr
FfqlyvHdu3errubl5SlbwA1W9er9ppv18Ty387v97szPvwdF9YhL+dt9f/CI
sh/WPtO4qe6BR9Vr1FBaNm/e7P79738HN4bElDHV2bZtm3v11VdFJ0Osataq
4wa+/a6y7uSPv16lJ2S4oyd+dF8sXuZe7dnLVUEHZGm1atVV444cObJSoeVX
QS1cuPAi1jRu8qwbO2Gy275zryLtQe49cER1Bp4ossZ4WCv8KB3iWcrwhC1f
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"a7a079ce-876f-4165-996f-50718ccf84ca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "adjacency", " ", "matrix", " ", "when", " ", "fluxes", " ", "at", " ", 
    "the", " ", "positions", " ", "columns", " ", "are", " ", 
    RowBox[{"bufferd", ":", " ", 
     RowBox[{"set", " ", "columns", " ", "to", " ", "0"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"reducematrix", "[", "columns_", "]"}], ":=", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"matrix", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "column"}], "}"}], "\[Rule]", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"column", ",", "columns"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"test", " ", "if", " ", "graph", " ", "is", " ", "acyclic", " ", 
     RowBox[{"(", 
      RowBox[{
      "and", " ", "in", " ", "Mathematica", " ", "terms", " ", "has", " ", 
       "has", " ", "no", " ", "self", " ", "loops"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GoodGraphQ", ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"AcyclicGraphQ", "[", "#", "]"}], "\[And]", 
       RowBox[{"LoopFreeGraphQ", "[", "#", "]"}]}], "&"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "get", " ", "all", " ", "possible", " ", "flux", " ", "combinations", " ",
      "up", " ", "to", " ", "level"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"acycliccombinations", "[", "level_", "]"}], ":=", 
     RowBox[{"Subsets", "[", 
      RowBox[{
       RowBox[{"tsolve", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "level"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "all", " ", "combinations", " ", "with", " ", "a", " ", 
     "given", " ", "number", " ", "of", " ", "fluxes", " ", "as", " ", 
     "state", " ", "variables", " ", 
     RowBox[{"(", 
      RowBox[{"maximally", " ", "maxlevel"}], ")"}], " ", "that", " ", "make",
      " ", "the", " ", "graph", " ", "having", " ", "no", " ", 
     RowBox[{"cycles", ".", " ", "Exclude"}], " ", "redundant", " ", 
     "solutions", " ", 
     RowBox[{"(", 
      RowBox[{
      "that", " ", "just", " ", "add", " ", "state", " ", "variables", " ", 
       "to", " ", "lower", " ", "level", " ", "solutions"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxlevel", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "fluxsolutions", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"fluxsolutions", "[", "level", "]"}], "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"GoodGraphQ", "[", 
            RowBox[{"graph", "[", 
             RowBox[{
              RowBox[{"reducematrix", "[", 
               RowBox[{"statefluxes", "/.", "fluxtonumber"}], "]"}], ",", 
              RowBox[{"{", "}"}]}], "]"}], "]"}], ",", "statefluxes", ",", 
           "Nothing"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"statefluxes", ",", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"acycliccombinations", "[", 
              RowBox[{"{", "level", "}"}], "]"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"level", "\[Equal]", "0"}], ",", "True", ",", 
                RowBox[{"And", "@@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Not", "@", 
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{"#", ",", "lowersolution"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"lowersolution", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"fluxsolutions", "[", "lowerlevel", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"lowerlevel", ",", "0", ",", 
                    RowBox[{"level", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}],
                     "]"}]}], "}"}]}], "]"}]}]}], "]"}], "&"}]}], "]"}]}], 
          "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"level", ",", "0", ",", "maxlevel"}], "}"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.820873878258656*^9, 3.8208738886354027`*^9}, {
   3.820873928958201*^9, 3.8208739966404047`*^9}, {3.820874062990571*^9, 
   3.820874066120101*^9}, {3.820960787213538*^9, 3.820960814055015*^9}, 
   3.821016923948601*^9, {3.82102772063081*^9, 3.821027726416346*^9}, {
   3.821028984071094*^9, 3.8210289926032057`*^9}, {3.8210385548808613`*^9, 
   3.8210386016435213`*^9}, {3.8210386354518547`*^9, 3.821038649802844*^9}, {
   3.821044091799878*^9, 3.821044284193717*^9}, {3.821044314448442*^9, 
   3.8210443147841377`*^9}, {3.8210443505312033`*^9, 
   3.8210443882212877`*^9}, {3.8210444417511883`*^9, 3.821044698092042*^9}, 
   3.821044782655546*^9, {3.8210448630240183`*^9, 3.821044888676708*^9}, {
   3.82104492437959*^9, 3.821044925554384*^9}, {3.821046303119816*^9, 
   3.821046335615446*^9}, {3.821046381397156*^9, 3.821046383557754*^9}, {
   3.82104642242695*^9, 3.821046430202965*^9}, {3.821046495848516*^9, 
   3.82104651803204*^9}, {3.821046572999084*^9, 3.821046600013941*^9}, {
   3.821046675395247*^9, 3.821046698539798*^9}, {3.82104676381949*^9, 
   3.8210467833160353`*^9}, {3.821046833142048*^9, 3.8210469519736567`*^9}, {
   3.821047011414681*^9, 3.821047025406744*^9}, {3.821047207654263*^9, 
   3.821047227803149*^9}, {3.826917188772313*^9, 3.8269172177617826`*^9}, {
   3.835712655834118*^9, 3.835712904543754*^9}, 3.8357129489586*^9, 
   3.835713009562257*^9, {3.835713112132143*^9, 3.835713122953047*^9}, {
   3.835713187884036*^9, 3.835713189625348*^9}, {3.8357132640738783`*^9, 
   3.835713266935601*^9}, {3.835713330186872*^9, 3.8357133461235228`*^9}, {
   3.835713414654882*^9, 3.835713414879067*^9}, {3.835713800263899*^9, 
   3.835713806381118*^9}, {3.835713885757843*^9, 3.83571388626036*^9}, {
   3.835713968934079*^9, 3.8357142856200027`*^9}, {3.8357145712925034`*^9, 
   3.835714572656735*^9}, 3.835715173549575*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"fc7ca88b-1462-4f25-ad19-4ce71f9fb776"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
        "\"\<fluxplots-root-shoot.pdf\>\""}], ",", "#"}], "]"}], ";", "#"}], 
    ")"}], "&"}], "@", 
  RowBox[{"Column", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "TextCell", "[", 
       "\"\<Root-shoot model. Cycle-free versions of graph for the auxiliary \
variables. Yellow: auxiliary variables that when buffered interrupt all \
cycles in the graph.\\nDo not show redundant solutions (that just add buffers \
to ready solutions with less buffers).\>\"", "]"}], "}"}], ",", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<--------------\>\"", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Number of buffers: \>\"", ",", "level"}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"graph", "[", 
              RowBox[{"matrix", ",", "statefluxes"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"statefluxes", ",", 
               RowBox[{"fluxsolutions", "[", "level", "]"}]}], "}"}]}], "]"}],
            "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"level", ",", "0", ",", "maxlevel"}], "}"}]}], "]"}]}], "]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8210357132780724`*^9, 3.8210358198818903`*^9}, {
   3.8210358499441147`*^9, 3.821035870725271*^9}, {3.8210359536123753`*^9, 
   3.821036001855983*^9}, {3.821036661228731*^9, 3.821036670345875*^9}, {
   3.821037976737815*^9, 3.8210379845000772`*^9}, {3.821038061565777*^9, 
   3.821038107269948*^9}, {3.821038142604491*^9, 3.8210382974211597`*^9}, {
   3.821038339641128*^9, 3.8210383606455584`*^9}, {3.821038463006775*^9, 
   3.8210384634365063`*^9}, {3.821038694553529*^9, 3.821038696729357*^9}, {
   3.8210387299463253`*^9, 3.82103885247663*^9}, 3.8210389630742693`*^9, {
   3.821044246250271*^9, 3.821044252456881*^9}, {3.821046442481029*^9, 
   3.8210464791100197`*^9}, {3.82104707482798*^9, 3.8210471514174767`*^9}, {
   3.821047181499978*^9, 3.821047189564086*^9}, {3.821047253632619*^9, 
   3.821047257912219*^9}, 3.8220489630842743`*^9, {3.835713169478717*^9, 
   3.835713169991591*^9}, {3.8357143508295794`*^9, 3.835714357500079*^9}, {
   3.8357146279042664`*^9, 3.835714630412871*^9}, {3.8357152251422377`*^9, 
   3.835715229637144*^9}, {3.836236254872306*^9, 3.836236255031715*^9}, {
   3.836236315230556*^9, 3.8362364580280437`*^9}, {3.836236543844008*^9, 
   3.836236549890935*^9}, {3.836236586742971*^9, 3.836236612610372*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"7e3502c5-1b95-490c-9903-27b4304e2f30"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell["\<\
Root-shoot model. Cycle-free versions of graph for the auxiliary variables. \
Yellow: auxiliary variables that when buffered interrupt all cycles in the \
graph.
Do not show redundant solutions (that just add buffers to ready solutions \
with less buffers).\
\>",ExpressionUUID->"088aec7a-30d6-43ab-8ef2-88b03056be95"],
      TextCell[
      "Root-shoot model. Cycle-free versions of graph for the auxiliary \
variables. Yellow: auxiliary variables that when buffered interrupt all \
cycles in the graph.\nDo not show redundant solutions (that just add buffers \
to ready solutions with less buffers)."]]},
    {
     TagBox[GridBox[{
        {"\<\"--------------\"\>"},
        {
         TemplateBox[{"\"Number of buffers: \"", "0"},
          "RowDefault"]},
        {
         InterpretationBox[
          TagBox[GridBox[{
             {""}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"],
          Column[{}]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"--------------\"\>"},
        {
         TemplateBox[{"\"Number of buffers: \"", "1"},
          "RowDefault"]},
        {
         TagBox[GridBox[{
            {
             GraphicsBox[
              NamespaceBox["NetworkGraphics",
               DynamicModuleBox[{Typeset`graph = HoldComplete[
                 Graph[{1, 2}, {
                   SparseArray[
                   Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{2}, {1}}}, Pattern}], Null}, {
                  EdgeStyle -> {{
                    Thickness[
                    Scaled[0.01]], 
                    GrayLevel[0]}}, GraphLayout -> 
                   "SpringElectricalEmbedding", ImageSize -> 200, 
                   VertexLabels -> {
                    2 -> Placed[
                    "\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"C\"],FontSlant->\"Italic\"]\)", Center], 1 -> 
                    Placed["\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"N\"],FontSlant->\"Italic\"]\)", Center]}, VertexLabelStyle -> {
                    Directive[10, Bold, Italic]}, VertexSize -> {{0.2, 0.2}}, 
                   VertexStyle -> {
                    1 -> RGBColor[1, 1, 0], 2 -> 
                    RGBColor[
                    0.9368417, 0.9506779000000001, 0.9709798000000001]}}]]}, 
                TagBox[GraphicsGroupBox[{
                   {GrayLevel[0], Thickness[0.01], Opacity[0.7], Arrowheads[
                    Medium], 
                    ArrowBox[BezierCurveBox[{{1., 0.}, {
                    0.5000000000000003, -0.1644407471831164}, {0., 
                    5.677710618986984*^-18}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.677710618986984*^-18}, {
                    0.5000000000000002, 0.1644407471831165}, {1., 0.}}], 
                    0.2]}, 
                   {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[1, 1, 0], DiskBox[{1., 0.}, 0.2]}, InsetBox[
                    
                    StyleBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\
\", \\\"N\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
                    StripOnInput->False,
                    FontSize->10,
                    FontWeight->Bold,
                    FontSlant->Italic], {1., 0.},
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[
                    0.9368417, 0.9506779000000001, 0.9709798000000001], 
                    DiskBox[{0., 5.677710618986984*^-18}, 0.2]}, InsetBox[
                    
                    StyleBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\
\", \\\"C\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
                    StripOnInput->False,
                    FontSize->10,
                    FontWeight->Bold,
                    FontSlant->Italic], {0., 5.677710618986984*^-18},
                    BaseStyle->"Graphics"]}}}],
                 MouseAppearanceTag["NetworkGraphics"]],
                AllowKernelInitialization->False]],
              
              DefaultBaseStyle->{
               "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                Hue[0.8, 1., 0.6]},
              FormatType->TraditionalForm,
              FrameTicks->None,
              ImageSize->200]},
            {
             GraphicsBox[
              NamespaceBox["NetworkGraphics",
               DynamicModuleBox[{Typeset`graph = HoldComplete[
                 Graph[{1, 2}, {
                   SparseArray[
                   Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{2}, {1}}}, Pattern}], Null}, {
                  EdgeStyle -> {{
                    Thickness[
                    Scaled[0.01]], 
                    GrayLevel[0]}}, GraphLayout -> 
                   "SpringElectricalEmbedding", ImageSize -> 200, 
                   VertexLabels -> {
                    2 -> Placed[
                    "\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"C\"],FontSlant->\"Italic\"]\)", Center], 1 -> 
                    Placed["\!\(\*StyleBox[SubscriptBox[\"\[Rho]\", \
\"N\"],FontSlant->\"Italic\"]\)", Center]}, VertexLabelStyle -> {
                    Directive[10, Bold, Italic]}, VertexSize -> {{0.2, 0.2}}, 
                   VertexStyle -> {
                    1 -> RGBColor[
                    0.9368417, 0.9506779000000001, 0.9709798000000001], 2 -> 
                    RGBColor[1, 1, 0]}}]]}, 
                TagBox[GraphicsGroupBox[{
                   {GrayLevel[0], Thickness[0.01], Opacity[0.7], Arrowheads[
                    Medium], 
                    ArrowBox[BezierCurveBox[{{1., 0.}, {
                    0.5000000000000003, -0.1644407471831164}, {0., 
                    5.677710618986984*^-18}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.677710618986984*^-18}, {
                    0.5000000000000002, 0.1644407471831165}, {1., 0.}}], 
                    0.2]}, 
                   {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[
                    0.9368417, 0.9506779000000001, 0.9709798000000001], 
                    DiskBox[{1., 0.}, 0.2]}, InsetBox[
                    
                    StyleBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\
\", \\\"N\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
                    StripOnInput->False,
                    FontSize->10,
                    FontWeight->Bold,
                    FontSlant->Italic], {1., 0.},
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[1, 1, 0], 
                    DiskBox[{0., 5.677710618986984*^-18}, 0.2]}, InsetBox[
                    
                    StyleBox["\<\"\\!\\(\\*StyleBox[SubscriptBox[\\\"\[Rho]\\\
\", \\\"C\\\"],FontSlant->\\\"Italic\\\"]\\)\"\>",
                    StripOnInput->False,
                    FontSize->10,
                    FontWeight->Bold,
                    FontSlant->Italic], {0., 5.677710618986984*^-18},
                    BaseStyle->"Graphics"]}}}],
                 MouseAppearanceTag["NetworkGraphics"]],
                AllowKernelInitialization->False]],
              
              DefaultBaseStyle->{
               "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                Hue[0.8, 1., 0.6]},
              FormatType->TraditionalForm,
              FrameTicks->None,
              ImageSize->200]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"--------------\"\>"},
        {
         TemplateBox[{"\"Number of buffers: \"", "2"},
          "RowDefault"]},
        {
         InterpretationBox[
          TagBox[GridBox[{
             {""}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"],
          Column[{}]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8210357665499687`*^9, 3.821035806215905*^9}, {
   3.821035850928473*^9, 3.8210358719487677`*^9}, 3.82103593531229*^9, {
   3.821035965641987*^9, 3.821036002214794*^9}, {3.821036648330187*^9, 
   3.821036673462837*^9}, 3.821038012826542*^9, {3.8210380902924023`*^9, 
   3.821038108218261*^9}, 3.821038166836801*^9, {3.821038267562276*^9, 
   3.8210382990638027`*^9}, 3.821038384956155*^9, 3.821038492869671*^9, {
   3.821038846017982*^9, 3.821038873929193*^9}, 3.821038967758527*^9, 
   3.821046486741241*^9, 3.821047035893157*^9, 3.821047153864393*^9, {
   3.82104718411684*^9, 3.8210471912226562`*^9}, 3.821047259382666*^9, {
   3.826917206988943*^9, 3.826917226477948*^9}, {3.8357131746269083`*^9, 
   3.835713181105422*^9}, 3.835713832063086*^9, 3.835713895573112*^9, 
   3.835714363040286*^9, {3.835714450840789*^9, 3.835714462551558*^9}, 
   3.835714526932845*^9, {3.835714613718192*^9, 3.8357146569219522`*^9}, {
   3.8357151635422*^9, 3.835715190478137*^9}, 3.835715233637726*^9, 
   3.8362364684595737`*^9, 3.8362365538945704`*^9, {3.836236602888859*^9, 
   3.836236613097682*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"60448081-0ce1-483c-b059-ecd5c9ffecc2"]
}, Open  ]]
},
WindowSize->{1440., 851.25},
WindowMargins->{{0, Automatic}, {Automatic, 21.75}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.1 for Linux x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7c7fcdfd-0194-42e9-82e6-0f854c854a87"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4603, 113, 380, "Input",ExpressionUUID->"62b48ec8-8ea3-49e5-90b6-77a4e3c89b1a"],
Cell[5186, 137, 2047, 50, 104, "Output",ExpressionUUID->"5d928e1e-137a-4f8b-9ed2-09d2d691c996"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7270, 192, 6088, 157, 341, "Input",ExpressionUUID->"af7d9720-9bab-4c43-a177-da6f35132207"],
Cell[13361, 351, 13019, 229, 103, 2503, 56, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a7a079ce-876f-4165-996f-50718ccf84ca"]
}, Open  ]],
Cell[26395, 583, 6495, 142, 406, "Input",ExpressionUUID->"fc7ca88b-1462-4f25-ad19-4ce71f9fb776"],
Cell[CellGroupData[{
Cell[32915, 729, 2919, 59, 301, "Input",ExpressionUUID->"7e3502c5-1b95-490c-9903-27b4304e2f30"],
Cell[35837, 790, 10315, 231, 483, "Output",ExpressionUUID->"60448081-0ce1-483c-b059-ecd5c9ffecc2"]
}, Open  ]]
}
]
*)

